@use "sass:math";

@import "./variables.scss";
@import "./mixin.scss";
@import "./palette.scss";

html,
body,
#app {
  margin: 0;
  height: 100%;
}

#app {
  @include d-flex;
  @include flex-direction-column;

  #gnb {
    background-color: #ffffff;
    box-shadow: 0 0 0.5rem 0 #00000056;
  }
}

.d-flex {
  @include d-flex;
}

.flex-row {
  @include flex-direction-row;
}
.flex-col {
  @include flex-direction-column;
}
.justify-content-center {
  @include justify-content-center;
}
.justify-content-between {
  @include justify-content-between;
}
.align-items-center {
  @include align-items-center;
}
.align-items-between {
  @include align-items-start;
}

@for $num from $start to $limit {
  .gap-#{$num} {
    gap: #{$num}rem;
  }
  .p-#{$num} {
    @include py($num);
    @include py($num);
    @include py($num);
    @include px($num);
  }
  .py-#{$num} {
    @include py($num);
  }
  .px-#{$num} {
    @include px($num);
  }
}

@for $num from $start to $limit {
  .h-#{($num - 1) * 25} {
    height: #{($num - 1) * 25} + "%";
  }
  .w-#{($num - 1) * 25} {
    width: #{($num - 1) * 25} + "%";
  }
  .vh-#{($num - 1) * 25} {
    height: #{($num - 1) * 25} + "vh";
  }
  .vw-#{($num - 1) * 25} {
    width: #{($num - 1) * 25} + "vw";
  }
}

.f-bold {
  font-weight: $bold-size;
}

.f-normal {
  font-weight: $normal-size;
}

.f-small {
  font-weight: $small-size;
}

.t-uppercase {
  text-transform: uppercase;
}

.t-capitalize {
  text-transform: capitalize;
}

.t-lowercase {
  text-transform: lowercase;
}

.t-center {
  @include t-center;
}
.t-start {
  @include t-start;
}
.t-end {
  @include t-end;
}

main {
  @include d-flex;
  @include flex-1;
}

footer {
  // background-color: #56565656;
  @include py(2);
}

@for $step from $start to $limit {
  $temp: ($step - 1) * 25;
  .bg-primary#{if($temp == 0, "", "-#{$temp}")} {
    background-color: rgba($primary-color, 1 - ($step - 1) * 25 * 0.01);
  }
  .bg-secondary#{if($temp == 0, "", "-#{$temp}")} {
    background-color: rgba($secondary-color, 1 - ($step - 1) * 25 * 0.01);
  }
  .bg-info#{if($temp == 0, "", "-#{$temp}")} {
    background-color: rgba($info-color, 1 - ($step - 1) * 25 * 0.01);
  }
  .bg-success#{if($temp == 0, "", "-#{$temp}")} {
    background-color: rgba($success-color, 1 - ($step - 1) * 25 * 0.01);
  }
  .bg-warn#{if($temp == 0, "", "-#{$temp}")} {
    background-color: rgba($warn-color, 1 - ($step - 1) * 25 * 0.01);
  }
  .bg-error#{if($temp == 0, "", "-#{$temp}")} {
    background-color: rgba($error-color, 1 - ($step - 1) * 25 * 0.01);
  }
  .bg-black#{if($temp == 0, "", "-#{$temp}")} {
    background-color: rgba($black-color, 1 - ($step - 1) * 25 * 0.01);
  }
  .bg-gray#{if($temp == 0, "", "-#{$temp}")} {
    background-color: rgba($gray-color, 1 - ($step - 1) * 25 * 0.01);
  }
  .bg-white#{if($temp == 0, "", "-#{$temp}")} {
    background-color: rgba($white-color, 1 - ($step - 1) * 25 * 0.01);
  }
}

@for $step from $start to $limit {
  $temp: ($step - 1) * 25;
  .text-primary#{if($temp == 0, "", "-#{$temp}")} {
    color: rgba($primary-color, 1 - ($step - 1) * 25 * 0.01);
  }
  .text-secondary#{if($temp == 0, "", "-#{$temp}")} {
    color: rgba($secondary-color, 1 - ($step - 1) * 25 * 0.01);
  }
  .text-info#{if($temp == 0, "", "-#{$temp}")} {
    color: rgba($info-color, 1 - ($step - 1) * 25 * 0.01);
  }
  .text-success#{if($temp == 0, "", "-#{$temp}")} {
    color: rgba($success-color, 1 - ($step - 1) * 25 * 0.01);
  }
  .text-warn#{if($temp == 0, "", "-#{$temp}")} {
    color: rgba($warn-color, 1 - ($step - 1) * 25 * 0.01);
  }
  .text-error#{if($temp == 0, "", "-#{$temp}")} {
    color: rgba($error-color, 1 - ($step - 1) * 25 * 0.01);
  }
  .text-black#{if($temp == 0, "", "-#{$temp}")} {
    color: rgba($black-color, 1 - ($step - 1) * 25 * 0.01);
  }
  .text-gray#{if($temp == 0, "", "-#{$temp}")} {
    color: rgba($gray-color, 1 - ($step - 1) * 25 * 0.01);
  }
  .text-white#{if($temp == 0, "", "-#{$temp}")} {
    color: rgba($white-color, 1 - ($step - 1) * 25 * 0.01);
  }
}
