import { Role } from "@common/enums/role";
import { Skill } from "@libs/skill";
import { totalAnnual } from "@libs/totalAnnual";
import Resume from "@models/Resume";
import { companies } from "@storage/companies";

export const Information = {
  title: "팀과 서비스를 이해하며 개발하는 백엔드 개발자",
  // title: "문제 해결에 집중하고 효율성을 고민하는 서버/백엔드 개발자",
  name: "김경남",
  position: Role.Backend,
  annual: totalAnnual(Object.values(companies).filter((item) => item.isIt)),
  coreCompetencies: [
    "AWS 클라우드 서비스 환경 구축",
    "AWS 계정간 프로젝트 마이그레이션",
    "계정 로그인 시스템 무중단 마이그레이션",
    "CI/CD 파이프라인 구축 및 자동화",
    "팀 내 효과적인 소통을 위한 문서화",
    "NestJS 백엔드 개발 및 유지보수",
    "개인 블로그 운영 및 문제 해결 과정 기록",
  ],
  description: [
    "서비스의 확장성과 비즈니스 로직에 최적화된 백엔드 설계 및 운영 경험을 쌓아왔습니다. 특히, API 성능 최적화, 기존 데이터 호환을 고려한 구조 개선, CI/CD 자동화 구축을 통해 배포 및 운영 효율성을 개선해온 경험이 있습니다.",
    "항상 협업에 필요한 문서화와 소통을 위해 지금보다 나은 방법을 고민합니다. 기획에 정확하게 부합하는 기능 개발을 위해 소통과 이해가 가장 중요하다고 생각합니다.",
    "항상 부족함을 느끼며 필요한 지식을 학습하고, 생활에 불편함을 기능 구현을 통해 해소하면서 여러가지 방법으로 자기계발하고 있습니다.",
    "다음 직무에서 이런 경험을 바탕으로 서비스의 신뢰성과 유연성을 보장하는 아키텍처 설계에 기여하고 싶습니다.",
    "* 개인 블로그를 통해 기술적인 문제나 작업 중 이슈를 정리하고 기록하고 있습니다.",
  ],
  resume: [
    new Resume("현재 학습과 미래 계획", [
      "웨딩 도메인의 CRM 및 ERP 시스템을 실무에서 개발하며, 고객 관리, 일정 관리, 재고 수량 및 실사 처리 등 다양한 인적 및 물적 자원 흐름을 시스템화하는 과정을 경험했습니다. CRM의 파이프라인 개념과 ERP의 물류·재무 흐름을 이해하게 되었으며, 도메인 기반 시스템의 복잡성을 체감하며 실질적인 업무 로직을 설계하고 구현하는 역량을 쌓을 수 있었습니다.",

      "특히 이 경험을 바탕으로, CRM과 ERP 시스템을 MVP 수준으로 재현하는 사이드 프로젝트를 준비 중입니다. 요구사항 정리와 화면 흐름도 설계 단계를 진행 중이며, 실무에서 경험한 다양한 케이스를 기반으로 실용적인 B2B 플랫폼 아키텍처를 직접 설계하고자 합니다.",

      "또한 실 프로젝트에서 차수별 운영 구조를 관리하기 위해 Git Flow 전략을 팀 상황에 맞게 응용하여 브랜치 관리 정책을 수립하고 운영해본 경험이 있습니다. 개발 차수와 운영 환경을 구분하여 전략을 수립한 결과, Git의 구조적 이해가 깊어졌고, 협업과 릴리즈 전략에 대한 통찰을 얻게 되었습니다.",

      "DB 마이그레이션 또한 주요 학습 포인트 중 하나였습니다. 운영 버전별로 스키마가 달라지며 기존 데이터와의 호환성 문제를 해결하기 위해, 마이그레이션 쿼리를 설계하고 데이터 유효성 검증을 수반하는 작업을 반복하며 관련 역량을 강화할 수 있었습니다. 현재는 Flyway와 같은 툴 도입을 고민 중이며, 자동화와 안정성 확보 측면에서의 개선 방향도 탐색하고 있습니다.",

      "이러한 학습과 경험을 바탕으로, 앞으로는 B2B SaaS 서비스에서 요구되는 복잡한 비즈니스 로직을 구조적으로 잘 설계하고, 변화에 유연하게 대응할 수 있는 백엔드 시스템을 만들고자 합니다. 꾸준한 학습과 실험을 통해 기술 리더로서의 역할도 확장해 나갈 계획입니다.",
    ]),
    new Resume("이전 경험의 기록", [
      "NestJS 기반 서비스 구축을 지속적으로 실습하며 백엔드 아키텍처에 대한 이해를 넓히고 있습니다. 최근에는 TypeORM과 Prisma, MikroORM을 경험하며 ORM 도구의 특성과 유지보수성 측면에서의 차이를 비교해왔고, 현재는 실무에서 Prisma와 MikroORM의 장점을 결합한 프로젝트 설계를 검토하고 있습니다.",

      "클라우드 및 인프라 영역에서는 AWS 환경 전반을 다루며 EC2, S3, RDS, Route53 등의 자원을 효율적으로 활용한 계정 간 프로젝트 마이그레이션을 경험했습니다. 또한, 관공서 기반 B2B 프로젝트에 참여하며 온프레미스 환경 특유의 제한 조건을 이해하고, 방화벽, 로컬 DNS, 인증 시스템 설정 등 실제 운영 환경에서 요구되는 설정과 제약 조건을 깊이 이해하게 되었습니다.",

      "개발 서버가 부재한 팀 환경에서 NAS 서버를 활용한 자체 개발 서버를 Docker로 구성하여 운영하면서, DevOps 영역에 대한 관심과 실질적인 경험을 확장하고 있습니다. 이러한 경험은 자원이 제한된 환경에서 최대한의 효율을 내는 기술적 선택과 문제 해결 능력을 기르는 데 도움이 되었습니다.",

      "이 외에도 Jenkins, Shell Script 등을 활용한 CI/CD 자동화와 테스트 자동화 실험을 이어가며, 개발-운영 사이클의 안정성과 반복 가능성을 확보하는 데 집중하고 있습니다.",

      "과거에는 이러한 경험과 기술 기반 위에, 대규모 트래픽과 데이터를 처리할 수 있는 확장성 있는 서비스 구조를 설계하고, 팀의 효율성을 높이는 기술적 리더십을 발휘하는 개발자를 목표로 삼고 있습니다. 계속해서 신기술을 탐구하고, 이를 직접 프로젝트에 적용해보며 아키텍처 설계 및 운영 안정성을 동시에 갖춘 백엔드 개발자로 성장하고 있습니다.",
    ]),
    new Resume("개발 서버 관리 경험", [
      "사내 개발 서버가 없는 환경에서 개발 환경을 개선하기 위해 NAS 서버를 활용한 개발 서버를 구축했던 경험이 있습니다. 기존의 NAS 서버는 주로 데이터 저장용으로 사용되었고, 속도가 느려 최적의 서버 환경은 아니었지만, 이를 기반으로 Docker를 설치하고 개발 서버로 전환하여 팀 전체의 개발 프로세스를 개선하는 데 기여했습니다.",

      "기존에 팀원들은 각자의 로컬 환경에서 개발, 테스트, 배포를 진행해야 했기 때문에 환경 설정이 통일되지 않아 문제가 발생할 가능성이 컸습니다. NAS 서버에 Docker를 활용해 통합된 개발 환경을 구축한 결과, 다음과 같은 성과를 얻을 수 있었습니다:",

      "- 개발 환경 표준화: 모든 팀원이 동일한 개발 환경에서 작업할 수 있도록 하여, 환경 차이로 인한 문제를 최소화했습니다.",
      "- 배포 테스트 효율화: 실제 배포 환경과 유사한 서버 환경을 세팅하여 배포 전 단계에서의 테스트 정확도를 높였습니다.",
      "- 프로세스 개선: 로컬 환경에서 진행하던 배포와 테스트 작업을 NAS 서버에서 수행함으로써 팀원들의 개발 속도와 협업 효율성이 향상됐습니다.",

      "이 경험을 통해 한정된 자원을 활용하여 최적의 솔루션을 제공하고, 팀의 생산성을 높이는 데 기여할 수 있었습니다. 또한, Docker를 활용한 컨테이너 기반 환경 설정과 배포 테스트 과정을 직접 경험하며, 개발 환경의 중요성과 이를 관리하는 방법에 대한 깊은 이해를 쌓을 수 있었습니다.",
    ]),
    new Resume("문제 해결 과정을 통해 성장하는 백엔드 개발자", [
      "백엔드 개발 중 마주한 문제 상황을 분석하여 원인과 발생 지점을 이론과 경험을 바탕으로 끝까지 추적하고 해결합니다. 이러한 과정에서 개발 서버 관리, 운영 서버 배포 자동화, 고객사 원격 지원 등 다양한 경험을 통해 역량을 발전시켰습니다.",

      "개발 서버 환경에서는 단일 프로젝트 배포 방식을 개선하기 위해 도커(Docker)를 활용하여 프로젝트별로 컨테이너를 생성하고 관리했습니다. 이를 통해 도커에 대한 이해도를 높일 수 있었으며, 서비스의 유지보수와 확장성을 강화한 경험이었습니다.",

      "운영 서버의 빌드, 배포, 재시작 과정을 수동으로 처리하던 기존 방식은 시간 소모와 휴먼 에러의 위험이 있었습니다. 이를 해결하기 위해 쉘 스크립트(Shell Script)와 배치 파일을 조합하여 프로세스를 자동화했고, 결과적으로 업무 효율성이 좋아졌습니다.",

      "고객사의 질의와 문제는 매번 달라 도전적이었지만, 이러한 경험은 순간 대응 능력과 문제 해결 능력을 크게 향상시켰습니다. 네트워크 지식, 고객사 서비스의 동작 원리, 설치 과정에 대한 깊은 이해가 필수적이었으며, 실제로 네트워크 연결 문제는 방화벽 설정을 점검하며 해결했고, 데이터베이스 설치 문제는 환경 변수와 경로 설정을 분석하여 문제를 해결했습니다.",

      "이처럼 고객사 원격 지원 경험을 통해 성장할 수 있었고, 문제 해결 과정에서 얻은 통찰을 기록으로 남기기 위해 개인 블로그에 매뉴얼과 사례를 작성하여 공유하고 있습니다. 이러한 경험과 노력이 개발자로서 성장에 지속해서 도움이 되고, 더 나은 해결 방안을 탐구하는 데 큰 동기 부여가 되고 있습니다.",
    ]),
    new Resume("문서화와 공유 문화를 지향하는 개발자", [
      "기억의 한계를 극복하고, 협업 과정에서 소통의 오류를 줄이기 위해 문서화와 공유의 중요성을 강조합니다. 소통에서는 듣는 것도 중요하지만, 체계적으로 정리된 문서를 통해 전달된 정보가 더 오래 기억되고 정확하다는 점과 필요성을 경험으로 느꼈습니다. 또한 문서화를 통해 팀원들이 언제든 업무 내용을 열람할 수 있도록 하여 소통의 깊이가 더해져 의사소통 속도와 정확성이 크게 향상되었습니다.",

      "과거 구두로 업무 내용을 전달하던 팀에서 근무한 경험이 있습니다. 소통 과정에서 발생하는 정보 누락과 오해를 최소화하기 위해 조직에 문서화를 제안하고, 디스코드와 노션 같은 협업 도구를 통해 문서를 공유하는 방안을 도입했습니다.",

      "문서화에 대한 열정은 조직 내에서만 그치지 않았습니다. 개인 기술 블로그를 운영하며, 프로젝트 중 겪었던 문제 상황과 해결 과정, 새롭게 배운 기술, 그리고 현재 학습 중인 기술에 대한 튜토리얼과 팁을 작성하고 공유하고 있습니다. 이를 통해 기술적 지식을 체계적으로 정리하며, 다른 개발자들과 소통할 기회를 확대하고 있습니다.",

      "문서화와 공유 문화를 통해 팀워크를 강화하고, 개인적으로도 발전하는 개발자로 성장하고 있습니다.",
    ]),
    // new Resume("개발 서버 관리 경험을 통해 성장한 개발자", [
    //   "사내 개발 서버 두 대를 관리하며, 네트워크와 서버 운영의 기초 지식을 습득하고 효율적인 서버 관리 프로세스를 구축했던 경험이 있습니다. QA 서버나 테스트 서버 없이 운영되던 환경에서, 프로젝트 개발 및 배포 전 모든 과정을 철저히 검토해야 했습니다.",

    //   "초기에는 선임자의 구두 인계를 통해 서버 관리 업무를 시작했습니다. 하지만 개발 서버의 한정된 자원과 이미 배포된 프로젝트들로 인해 Nginx 설정, 포트 라우팅, 스위치 제어 등의 기술이 필요했습니다. 이를 해결하기 위해 로컬 테스트 환경을 활용하며 Nginx를 학습하고, 점차 네트워크 트래픽 라우팅과 포트 할당에 익숙해질 수 있었습니다.",

    //   "서버 관리를 체계화하기 위해 문서화를 진행했습니다. 프로젝트별 점유 포트와 서버 상태를 기록하고, 이를 클라이언트 기준으로 분류하여 비개발자도 이해할 수 있도록 작성했습니다. 또한, 터미널 연결 방법과 서버 계정 정보 등을 포함한 문서를 작성하여 팀 내 공유 문화를 정착시키는 데 기여했습니다.",

    //   "이 경험은 프로젝트 환경 구축에 필요한 설정과 초기 작업 요소, 그리고 확장성을 고려하는 방법을 배우는 데 큰 도움이 되었습니다. 네트워크와 서버 관리라는 익숙하지 않은 분야에서 라우팅, 포트 포워딩, 리눅스 기본 명령어를 익히며 성장할 수 있었고, 실수와 다양한 시도를 통해 문제 해결 능력과 책임감을 크게 키울 수 있었습니다.",
    // ]),
    new Resume("미디어 데이터 처리와 소켓 서버 제작 경험", [
      "WebRTC를 활용한 라이브 커머스 서비스 제작 경험이 있습니다. 이 프로젝트에서는 미디어 데이터를 짧은 시간 단위로 녹화하고, 이를 분할하여 실시간 스트리밍으로 재생하는 기술을 학습하고 구현했습니다.",

      "기존에 파일 단위로 미디어 데이터를 저장하고 관리하는 방식의 비효율성을 개선하기 위해 미디어 데이터를 데이터베이스에서 관리하는 방식을 시도했습니다. 이를 위해 미디어 데이터를 버퍼로 변환하고, 이진 데이터를 문자열로 변환하여 데이터베이스에 저장한 뒤, 쿼리를 통해 데이터를 조회하고 다시 미디어 버퍼로 변환해 재생하는 방식을 구현했습니다.",

      "이 과정에서 미디어 데이터를 다루는 데 있어 파일 기반 접근 방식에서 데이터베이스 기반 접근 방식으로의 확장 가능성을 발견했습니다. 비록 메모리 점유 효율은 크게 개선되지 않았지만, 데이터를 저장하고 재생하는 새로운 방식을 실험하며 미디어 버퍼 처리에 대한 기술을 깊이 이해할 수 있었습니다.",

      "이 경험을 통해 데이터 관리의 확장성에 대한 통찰을 얻었으며, 파일 시스템 외에도 데이터베이스를 활용하여 데이터를 저장하고 처리할 수 있는 가능성을 탐구한 좋은 기회였습니다. 또한, 실시간 스트리밍 환경에서 데이터 처리를 최적화하는 방법에 대한 경험과 아이디어를 축적할 수 있었습니다.",
    ]),
  ],
  email: "chaplet01@gmail.com",
  github: "https://github.com/kkn1125",
  blog: "https://kkn1125.github.io",
  age: new Date().getFullYear() - 1993,
  skill: {
    main: [
      Skill("nest"),
      Skill("nodejs"),
      Skill("prisma"),
      Skill("mysql"),
      Skill("mariadb"),
      Skill("typescript"),
      Skill("linux"),
      Skill("docker"),
      Skill("react"),
    ],
    sub: [Skill("springboot"), Skill("java"), Skill("python")],
  },
  stacks: [
    Skill("awsEc2"),
    Skill("nginx"),
    Skill("jwt"),
    Skill("uwebsockets"),
    Skill("socketio"),
    Skill("fastify"),
    Skill("express"),
    Skill("typeorm"),
    Skill("mybatis"),
    Skill("nextjs"),
    Skill("jenkins"),
    Skill("artillery"),
    Skill("jest"),
    Skill("vite"),
    Skill("vitest"),
    Skill("webpack"),
    Skill("gulp"),
    Skill("bootstrap"),
    Skill("formik"),
    Skill("sass"),
    Skill("javascript"),
    Skill("styledcomponent"),
    Skill("mui"),
    Skill("webrtc"),
    Skill("postgresql"),
    Skill("reactQuery"),
    Skill("recoil"),
    Skill("swagger"),
    Skill("postman"),
    Skill("xterm"),
    Skill("zustand"),
  ],
} as const;
export type Information = (typeof Information)[keyof typeof Information];
